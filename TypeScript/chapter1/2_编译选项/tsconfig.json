{
    /* 
        tsconfig.json是ts编译器的配置文件，ts编译器可以根据它的信息来对代码进行编译
            "include" 用来指定哪些ts文件需要被编译
                路径: ** 表示任意目录
                       * 表示任意文件
            "exclude" 不需要编译的文件目录
                默认值:["node_modules","bower_components","jspm_packages"]
    */

    "include": [
        "./app/**/*"
    ],
    // "exclude": [
    //     "./app/hello/*"
    // ]
    /* 
        compilerOptions  编译器的选项
    */
    "compilerOptions": {
    // target 用来指定ts被编译为的ES的版本 
    // 'es3', 'es5', 'es6', 'es2015', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'es2022', 'esnext'
    "target": "ES6",
    // module 指定要使用的模块化的规范
    // 'none', 'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 'es2020', 'es2022', 'esnext', 'node16', 'nodenext'
    "module": "ES6",
    // lib用于指定项目中要用到的库
    // 'es5', 'es6', 'es2015', 'es7', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'es2022', 'es2023',
    //  'esnext', 'dom', 'dom.iterable', 'webworker', 'webworker.importscripts', 'webworker.iterable', 'scripthost', 
    // 'es2015.core', 'es2015.collection', 'es2015.generator', 'es2015.iterable', 'es2015.promise', 'es2015.proxy', 
    // 'es2015.reflect', 'es2015.symbol', 'es2015.symbol.wellknown', 'es2016.array.include', 'es2017.date', 'es2017.object', 
    // 'es2017.sharedmemory', 'es2017.string', 'es2017.intl', 'es2017.typedarrays', 'es2018.asyncgenerator', 'es2018.asynciterable', 
    // 'es2018.intl', 'es2018.promise', 'es2018.regexp', 'es2019.array', 'es2019.object', 'es2019.string', 'es2019.symbol',
    //  'es2019.intl', 'es2020.bigint', 'es2020.date', 'es2020.promise', 'es2020.sharedmemory', 'es2020.string', 'es2020.symbol.wellknown',
    //  'es2020.intl', 'es2020.number', 'es2021.promise', 'es2021.string', 'es2021.weakref', 'es2021.intl', 'es2022.array', 'es2022.error', 
    // 'es2022.intl', 'es2022.object', 'es2022.sharedmemory', 'es2022.string', 'es2022.regexp', 'es2023.array', 'es2023.collection', 'esnext.array',
    //  'esnext.collection', 'esnext.symbol', 'esnext.asynciterable', 'esnext.intl', 'esnext.disposable', 'esnext.bigint', 'esnext.string', 'esnext.promise', 
    // 'esnext.weakref', 'esnext.decorators', 'decorators', 'decorators.legacy'
    // "lib": []
    // outDir 用来指定编译后文件所在的目录
    "outDir": "./dist",
    // 将代码合并为一个文件
    // 设置outFile后，所有的全局作用域中的代码会合并到同一个文件中
    // "outFile": "./dist/app.js"

    // 是否对js文件进行编译，默认时false
    "allowJs": true,
    // 是否检查js代码符合语法规范，默认是false
    "checkJs": true,

    // 是否移除注释
    "removeComments": true,
    
    // 不生成编译后的文件
    "noEmit": false,
    // 当有错误时不生成编译后的文件
    "noEmitOnError": true,

    // 所有严格检查的总开关
    "strict": true,

    // 用来设置编译后的文件是否使用严格模式，默认false
    "alwaysStrict": false,

    // 不允许隐式的any类型
    "noImplicitAny":true,

    // 不允许不明确类型的this
    "noImplicitThis": true,

    // 严格的检查空值
    "strictNullChecks": true
    }
}