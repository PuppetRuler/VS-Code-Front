{"ast":null,"code":"import pubsub from 'pubsub-js';\nexport default {\n  name: 'MyItem',\n  //声明接收todoObj对象\n  props: ['todoObj'],\n  methods: {\n    //勾选or取消勾选\n    handleCheck(id) {\n      //通知App组件将对应的todo对象的done值取反\n      this.$bus.$emit('checkTodo', id);\n\n      //自己弄的这个也一样，违反了原则，修改了props!\n      // todoObj.done = !todoObj.done\n    },\n\n    //删除\n    handelDelete(id) {\n      if (confirm('确认要删除吗？')) {\n        pubsub.publish('deleteTodo', id);\n      }\n    },\n    //编辑\n    handelEdit(todo) {\n      if (todo.hasOwnProperty('isEdit')) {\n        todo.isEdit = true;\n      } else {\n        this.$set(todo, 'isEdit', true);\n      }\n      //文本框自动获取焦点\n      this.$nextTick(function () {\n        this.$refs.inputTitle.focus();\n      });\n    },\n    //失去焦点回调（真正执行修改逻辑）\n    handleBlur(todo, e) {\n      todo.isEdit = false;\n      if (!e.target.value.trim()) return alert('输入不能为空~');\n      this.$bus.$emit('updateTodo', this.todoObj.id, e.target.value);\n    }\n  }\n};","map":{"version":3,"names":["pubsub","name","props","methods","handleCheck","id","$bus","$emit","handelDelete","confirm","publish","handelEdit","todo","hasOwnProperty","isEdit","$set","$nextTick","$refs","inputTitle","focus","handleBlur","e","target","value","trim","alert","todoObj"],"sources":["src/components/MyItem.vue"],"sourcesContent":["<template>\r\n    <transition name=\"todo\" appear>\r\n        <li>\r\n            <label>\r\n                <input type=\"checkbox\" :checked=\"todoObj.done\" @change=\"handleCheck(todoObj.id)\" />\r\n                <!-- 如下代码也能实现功能，但是不太推荐，因为有点违反原则，因为修改了props -->\r\n                <!-- <input type=\"checkbox\" v-model='todoObj.done' /> -->\r\n                <span v-show=\"!todoObj.isEdit\">{{ todoObj.title }}</span>\r\n                <input type=\"text\" \r\n                v-show=\"todoObj.isEdit\" \r\n                :value=\"todoObj.title\" \r\n                @blur=\"handleBlur(todoObj,$event)\"\r\n                ref=\"inputTitle\">\r\n            </label>\r\n            <button class=\"btn btn-danger\" @click=\"handelDelete(todoObj.id)\">删除</button>\r\n            <button class=\"btn btn-edit\" v-show=\"!todoObj.isEdit\" @click=\"handelEdit(todoObj)\">编辑</button>\r\n        </li>\r\n    </transition>\r\n</template>\r\n\r\n<script>\r\n    import pubsub from 'pubsub-js';\r\n    export default {\r\n        name: 'MyItem',\r\n        //声明接收todoObj对象\r\n        props: ['todoObj'],\r\n        methods: {\r\n            //勾选or取消勾选\r\n            handleCheck(id) {\r\n                //通知App组件将对应的todo对象的done值取反\r\n                this.$bus.$emit('checkTodo', id);\r\n\r\n                //自己弄的这个也一样，违反了原则，修改了props!\r\n                // todoObj.done = !todoObj.done\r\n            },\r\n            //删除\r\n            handelDelete(id) {\r\n                if (confirm('确认要删除吗？')) {\r\n                    pubsub.publish('deleteTodo', id);\r\n                }\r\n            },\r\n            //编辑\r\n            handelEdit(todo) {\r\n                if (todo.hasOwnProperty('isEdit')) {\r\n                    todo.isEdit = true;\r\n                } else {\r\n                    this.$set(todo, 'isEdit', true);\r\n                }\r\n                //文本框自动获取焦点\r\n                this.$nextTick(function(){\r\n                    this.$refs.inputTitle.focus()\r\n                })\r\n            },\r\n            //失去焦点回调（真正执行修改逻辑）\r\n            handleBlur(todo,e) {\r\n                todo.isEdit = false;\r\n                if(!e.target.value.trim()) return alert('输入不能为空~')\r\n                this.$bus.$emit('updateTodo',this.todoObj.id,e.target.value)\r\n            }\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    /*item*/\r\n    li {\r\n        list-style: none;\r\n        height: 36px;\r\n        line-height: 36px;\r\n        padding: 0 5px;\r\n        border-bottom: 1px solid #ddd;\r\n    }\r\n    li label {\r\n        float: left;\r\n        cursor: pointer;\r\n    }\r\n    li label li input {\r\n        vertical-align: middle;\r\n        margin-right: 6px;\r\n        position: relative;\r\n        top: -1px;\r\n    }\r\n    li button {\r\n        float: right;\r\n        display: none;\r\n        margin-top: 3px;\r\n    }\r\n    li:before {\r\n        content: initial;\r\n    }\r\n    li:last-child {\r\n        border-bottom: none;\r\n    }\r\n    li:hover {\r\n        background-color: #ccc;\r\n    }\r\n    li:hover button {\r\n        display: inline-block;\r\n    }\r\n    .todo-enter-active{\r\n        animation: 1s atguigu linear;\r\n    }\r\n    .todo-leave-active{\r\n        animation: 1s atguigu linear reverse;\r\n    }\r\n\r\n    @keyframes atguigu{\r\n        form{\r\n            transform: translateX(-100%);\r\n        }\r\n        to{\r\n            transform: translateX(0px);\r\n        }\r\n    }\r\n</style>"],"mappings":"AAqBA,OAAAA,MAAA;AACA;EACAC,IAAA;EACA;EACAC,KAAA;EACAC,OAAA;IACA;IACAC,YAAAC,EAAA;MACA;MACA,KAAAC,IAAA,CAAAC,KAAA,cAAAF,EAAA;;MAEA;MACA;IACA;;IACA;IACAG,aAAAH,EAAA;MACA,IAAAI,OAAA;QACAT,MAAA,CAAAU,OAAA,eAAAL,EAAA;MACA;IACA;IACA;IACAM,WAAAC,IAAA;MACA,IAAAA,IAAA,CAAAC,cAAA;QACAD,IAAA,CAAAE,MAAA;MACA;QACA,KAAAC,IAAA,CAAAH,IAAA;MACA;MACA;MACA,KAAAI,SAAA;QACA,KAAAC,KAAA,CAAAC,UAAA,CAAAC,KAAA;MACA;IACA;IACA;IACAC,WAAAR,IAAA,EAAAS,CAAA;MACAT,IAAA,CAAAE,MAAA;MACA,KAAAO,CAAA,CAAAC,MAAA,CAAAC,KAAA,CAAAC,IAAA,WAAAC,KAAA;MACA,KAAAnB,IAAA,CAAAC,KAAA,oBAAAmB,OAAA,CAAArB,EAAA,EAAAgB,CAAA,CAAAC,MAAA,CAAAC,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}