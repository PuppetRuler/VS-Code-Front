{"ast":null,"code":"//该文件专门用于创建整个应用的路由器\nimport VueRouter from \"vue-router\";\n//引入组件\nimport About from '../pages/About';\nimport Home from '../pages/Home';\nimport News from '../pages/News';\nimport Message from '../pages/Message';\nimport Detail from '../pages/Detail';\n\n//创建并暴露一个路由器\nconst router = new VueRouter({\n  routes: [{\n    name: 'guanyu',\n    path: '/about',\n    component: About,\n    meta: {\n      title: '关于'\n    }\n  }, {\n    name: 'zhuye',\n    path: '/home',\n    component: Home,\n    meta: {\n      title: '主页'\n    },\n    children: [{\n      name: 'xinwen',\n      path: 'news',\n      component: News,\n      meta: {\n        isAuth: true,\n        title: '新闻'\n      }\n    }, {\n      name: 'xiaoxi',\n      path: 'message',\n      component: Message,\n      children: [{\n        name: 'xiangqing',\n        path: 'detail',\n        component: Detail,\n        meta: {\n          isAuth: true,\n          title: '消息'\n        },\n        // 简写:解构赋值\n        props({\n          query: {\n            id,\n            title\n          }\n        }) {\n          return {\n            id: id,\n            title: title\n          };\n        }\n      }],\n      meta: {\n        isAuth: true,\n        title: '消息'\n      }\n    }]\n  }]\n});\n\n//全局前置路由守卫--初始化之前被调用，每次路由切换之前被调用\nrouter.beforeEach((to, from, next) => {\n  console.log('前置路由守卫', to, from);\n  document.title = to.meta.title || '硅谷系统';\n  if (to.meta.isAuth) {\n    //判断是否需要鉴权\n    if (localStorage.getItem('school') === 'atguigu') {\n      next();\n    } else {\n      alert('学校名不对，无法查看!');\n    }\n  } else {\n    next();\n  }\n});\n\n//全局后置路由守卫--初始化之后被调用，每次路由切换之后被调用\nrouter.afterEach((to, from) => {\n  console.log('后置路由守卫', to, from);\n});\nexport default router;","map":{"version":3,"names":["VueRouter","About","Home","News","Message","Detail","router","routes","name","path","component","meta","title","children","isAuth","props","query","id","beforeEach","to","from","next","console","log","document","localStorage","getItem","alert","afterEach"],"sources":["D:/前端学习代码/Vue_CLI_test/src/router/index.js"],"sourcesContent":["//该文件专门用于创建整个应用的路由器\r\nimport VueRouter from \"vue-router\";\r\n//引入组件\r\nimport About from '../pages/About'\r\nimport Home from '../pages/Home'\r\nimport News from '../pages/News'\r\nimport Message from '../pages/Message'\r\nimport Detail from '../pages/Detail'\r\n\r\n//创建并暴露一个路由器\r\nconst router = new VueRouter({\r\n    routes:[\r\n        {\r\n            name:'guanyu',\r\n            path:'/about',\r\n            component:About,\r\n            meta:{title:'关于'},\r\n        },\r\n        {\r\n            name:'zhuye',\r\n            path:'/home',\r\n            component:Home,\r\n            meta:{title:'主页'},\r\n            children:[\r\n                {\r\n                    name:'xinwen',\r\n                    path:'news',\r\n                    component:News,\r\n                    meta:{isAuth:true,title:'新闻'}\r\n                },\r\n                {\r\n                    name:'xiaoxi',\r\n                    path:'message',\r\n                    component:Message,\r\n                    children:[\r\n                        {\r\n                            name:'xiangqing',\r\n                            path:'detail',\r\n                            component:Detail,\r\n                            meta:{isAuth:true,title:'消息'},\r\n                            // 简写:解构赋值\r\n                            props({query:{id,title}}){\r\n                                return {\r\n                                    id:id,\r\n                                    title:title,\r\n                                }\r\n                            },\r\n                        }\r\n                    ],\r\n                    meta:{isAuth:true,title:'消息'}\r\n                },\r\n            ]\r\n        },\r\n    ]\r\n})\r\n\r\n//全局前置路由守卫--初始化之前被调用，每次路由切换之前被调用\r\nrouter.beforeEach((to,from,next)=>{\r\n    console.log('前置路由守卫',to,from);\r\n    document.title = to.meta.title || '硅谷系统'\r\n    if(to.meta.isAuth){  //判断是否需要鉴权\r\n        if(localStorage.getItem('school') === 'atguigu'){\r\n            next()\r\n        }else{\r\n            alert('学校名不对，无法查看!');\r\n        }\r\n    }else{\r\n        next()\r\n    }\r\n})\r\n\r\n//全局后置路由守卫--初始化之后被调用，每次路由切换之后被调用\r\nrouter.afterEach((to,from)=>{\r\n    console.log('后置路由守卫',to,from);\r\n})\r\n\r\nexport default router"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC;AACA,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,MAAM,MAAM,iBAAiB;;AAEpC;AACA,MAAMC,MAAM,GAAG,IAAIN,SAAS,CAAC;EACzBO,MAAM,EAAC,CACH;IACIC,IAAI,EAAC,QAAQ;IACbC,IAAI,EAAC,QAAQ;IACbC,SAAS,EAACT,KAAK;IACfU,IAAI,EAAC;MAACC,KAAK,EAAC;IAAI;EACpB,CAAC,EACD;IACIJ,IAAI,EAAC,OAAO;IACZC,IAAI,EAAC,OAAO;IACZC,SAAS,EAACR,IAAI;IACdS,IAAI,EAAC;MAACC,KAAK,EAAC;IAAI,CAAC;IACjBC,QAAQ,EAAC,CACL;MACIL,IAAI,EAAC,QAAQ;MACbC,IAAI,EAAC,MAAM;MACXC,SAAS,EAACP,IAAI;MACdQ,IAAI,EAAC;QAACG,MAAM,EAAC,IAAI;QAACF,KAAK,EAAC;MAAI;IAChC,CAAC,EACD;MACIJ,IAAI,EAAC,QAAQ;MACbC,IAAI,EAAC,SAAS;MACdC,SAAS,EAACN,OAAO;MACjBS,QAAQ,EAAC,CACL;QACIL,IAAI,EAAC,WAAW;QAChBC,IAAI,EAAC,QAAQ;QACbC,SAAS,EAACL,MAAM;QAChBM,IAAI,EAAC;UAACG,MAAM,EAAC,IAAI;UAACF,KAAK,EAAC;QAAI,CAAC;QAC7B;QACAG,KAAKA,CAAC;UAACC,KAAK,EAAC;YAACC,EAAE;YAACL;UAAK;QAAC,CAAC,EAAC;UACrB,OAAO;YACHK,EAAE,EAACA,EAAE;YACLL,KAAK,EAACA;UACV,CAAC;QACL;MACJ,CAAC,CACJ;MACDD,IAAI,EAAC;QAACG,MAAM,EAAC,IAAI;QAACF,KAAK,EAAC;MAAI;IAChC,CAAC;EAET,CAAC;AAET,CAAC,CAAC;;AAEF;AACAN,MAAM,CAACY,UAAU,CAAC,CAACC,EAAE,EAACC,IAAI,EAACC,IAAI,KAAG;EAC9BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACJ,EAAE,EAACC,IAAI,CAAC;EAC7BI,QAAQ,CAACZ,KAAK,GAAGO,EAAE,CAACR,IAAI,CAACC,KAAK,IAAI,MAAM;EACxC,IAAGO,EAAE,CAACR,IAAI,CAACG,MAAM,EAAC;IAAG;IACjB,IAAGW,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAC;MAC5CL,IAAI,CAAC,CAAC;IACV,CAAC,MAAI;MACDM,KAAK,CAAC,aAAa,CAAC;IACxB;EACJ,CAAC,MAAI;IACDN,IAAI,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;;AAEF;AACAf,MAAM,CAACsB,SAAS,CAAC,CAACT,EAAE,EAACC,IAAI,KAAG;EACxBE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACJ,EAAE,EAACC,IAAI,CAAC;AACjC,CAAC,CAAC;AAEF,eAAed,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}